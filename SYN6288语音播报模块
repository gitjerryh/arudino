#include <Arduino.h>

uint8_t Chinese_GB2312[50] = {0xBD,0xF1,0xCC,0xEC,0xB5,0xC4,0xCE,0xC2,0xB6,0xC8,0xCA,0xC7,0x00};//最后一个，必须添加0x00
void SYN_FrameInfo(uint8_t Music,uint8_t *HZdata);
 
void setup() {
 // put your setup code here, to run once:
 Serial.begin(9600);
 SYN_FrameInfo(0,Chinese_GB2312);
}
 
void loop() {
 // put your main code here, to run repeatedly:
 
}
 
/***********************************************************
* 名 称： YS-SYN6288 文本合成函数
* 功 能： 发送合成文本到SYN6288芯片进行合成播放
* 入口参数： Music(背景音乐选择):0无背景音乐。1-15：相关背景音乐
 *HZdata:文本指针变量 
* 出口参数：
* 说 明： 本函数只用于文本合成，具备背景音乐选择。默认波特率9600bps。 
* 调用方法：
**********************************************************/
void SYN_FrameInfo(uint8_t Music,uint8_t *HZdata)
{
/****************需要发送的文本**********************************/ 
 unsigned char Frame_Info[50];
 unsigned char HZ_Length; 
 unsigned char ecc = 0; //定义校验字节
 unsigned int i=0; 
 HZ_Length = 0;
 while(HZdata[HZ_Length] != 0) { // 手动计算长度，避免使用strlen
   HZ_Length++;
 }
 
/*****************帧固定配置信息**************************************/ 
 Frame_Info[0] = 0xFD ; //构造帧头FD
 Frame_Info[1] = 0x00 ; //构造数据区长度的高字节
 Frame_Info[2] = HZ_Length + 3; //构造数据区长度的低字节
 Frame_Info[3] = 0x01 ; //构造命令字：合成播放命令 
 Frame_Info[4] = 0x00 | Music<<4 ; //构造命令参数：背景音乐设定
 
/*******************校验码计算***************************************/ 
 for(i = 0; i<5; i++) //依次发送构造好的5个帧头字节
 { 
 ecc=ecc^(Frame_Info[i]); //对发送的字节进行异或校验 
 }
 
 for(i= 0; i<HZ_Length; i++) //依次发送待合成的文本数据
 { 
 ecc=ecc^(HZdata[i]); //对发送的字节进行异或校验 
 } 
/*******************发送帧信息***************************************/ 
 memcpy(&Frame_Info[5], HZdata, HZ_Length);
 Frame_Info[5+HZ_Length]=ecc;
 for(i=0; i < 5+HZ_Length+1; i++)
 {
 Serial.write(Frame_Info[i]);
 }
}
