#include <WiFi.h>
#include <WebServer.h>
#include <Adafruit_NeoPixel.h>

// WiFi配置
const char* ssid = "OnePlus 10 Pro";
const char* password = "55132768";

// WS2812配置
#define LED_PIN 48
#define NUM_LEDS 1  // ESP32-S3只有一个板载RGB LED

// 创建WS2812对象
Adafruit_NeoPixel pixels(NUM_LEDS, LED_PIN, NEO_GRB + NEO_KHZ800);

// 创建网页服务器对象,端口号80
WebServer server(80);

void setup() {
  Serial.begin(115200);
  
  // 初始化WS2812
  pixels.begin();
  pixels.clear();
  pixels.show();
  
  // 连接WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  
  Serial.println("");
  Serial.println("WiFi已连接");
  Serial.println("IP地址: ");
  Serial.println(WiFi.localIP());
  
  // 设置服务器路由
  server.on("/", handleRoot);
  server.on("/led/on", handleLedOn);
  server.on("/led/off", handleLedOff);
  
  // 启动服务器
  server.begin();
  Serial.println("HTTP服务器已启动");
}

void loop() {
  server.handleClient();
}

// 处理根路径请求
void handleRoot() {
  String html = "<!DOCTYPE html>"
                "<html>"
                "<head>"
                "<meta charset='UTF-8'>"
                "<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
                "<title>ESP32 LED控制</title>"
                "<style>"
                "body { font-family: Arial; text-align: center; margin-top: 50px; }"
                ".button { background-color: #4CAF50; border: none; color: white; padding: 15px 32px; "
                "text-align: center; text-decoration: none; display: inline-block; font-size: 16px; "
                "margin: 4px 2px; cursor: pointer; border-radius: 4px; }"
                ".button.off { background-color: #f44336; }"
                "</style>"
                "</head>"
                "<body>"
                "<h1>ESP32 LED控制</h1>"
                "<p><a href='/led/on' class='button'>打开LED</a></p>"
                "<p><a href='/led/off' class='button off'>关闭LED</a></p>"
                "</body>"
                "</html>";
  server.send(200, "text/html", html);
}

// 处理LED开启请求
void handleLedOn() {
  pixels.setPixelColor(0, pixels.Color(255, 255, 255)); // 设置为白色
  pixels.show();
  server.sendHeader("Location", "/");
  server.send(303);
}

// 处理LED关闭请求
void handleLedOff() {
  pixels.clear();
  pixels.show();
  server.sendHeader("Location", "/");
  server.send(303);
}
