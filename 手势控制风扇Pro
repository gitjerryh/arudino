#include <PAJ7620.h>
#include <Wire.h>
#include "PAJ7620.h"
#include <Arduino.h>
#include "DFRobot_SpeechSynthesis_V2.h" // 引入语音合成库

#define PAJ7620_Delay 800
#define FAN_PIN 3 // 风扇控制引脚
#define FAN_SPEED 128 // 50% 的 PWM 值 (0 - 255)

DFRobot_SpeechSynthesis_I2C ss; // 创建语音合成对象

// 函数前向声明
void handleGesture(const char* gesture);
void controlFan(bool turnOn);

void setup() {
    uint8_t error = 0;
    Serial.begin(115200);
    Serial.println("\r\nPAJ7620U2 TEST DEMO: Recognize 9 gestures.");
    error = PAJ7620Init(); // 初始化Paj7620寄存器
    if (error) {
        Serial.print("INIT ERROR,CODE:");
        Serial.println(error);
    } else {
        Serial.println("INIT OK");
    }
    ss.begin(); // 初始化语音合成传感器
    Serial.println("Please input your gestures:\n");

    pinMode(FAN_PIN, OUTPUT); // 设置风扇引脚为输出
    analogWrite(FAN_PIN, 0); // 初始时关闭风扇
}

void loop() {
    uint8_t data = 0;
    PAJ7620ReadReg(0x43, 1, &data); // 读取手势结果
    switch (data) {
        case GES_RIGHT_FLAG:
            handleGesture("右");
            break;
        case GES_LEFT_FLAG:
            handleGesture("左");
            break;
        case GES_UP_FLAG:
            handleGesture("上");
            break;
        case GES_DOWN_FLAG:
            handleGesture("下");
            break;
        case GES_FORWARD_FLAG:
            handleGesture("前");
            break;
        case GES_BACKWARD_FLAG:
            handleGesture("后");
            break;
        case GES_CLOCKWISE_FLAG:
            handleGesture("顺时针");
            controlFan(true); // 打开风扇
            break;
        case GES_COUNT_CLOCKWISE_FLAG:
            handleGesture("逆时针");
            controlFan(false); // 关闭风扇
            break;
        default:
            PAJ7620ReadReg(0x44, 1, &data);
            if (data == GES_WAVE_FLAG) {
                handleGesture("挥手");
            }
            break;
    }
    delay(100);
}

void handleGesture(const char* gesture) {
    delay(PAJ7620_Delay);
    Serial.println(gesture);
    delay(1000); // 等待1秒
    ss.speak(gesture); // 播报手势
}

void controlFan(bool turnOn) {
    if (turnOn) {
        ss.speak(F("风扇现在打开了鸭")); // 播报风扇打开
        delay(1000); // 等待1秒
        analogWrite(FAN_PIN, FAN_SPEED); // 启动风扇
    } else {
        ss.speak(F("风扇现在关闭了鸭")); // 播报风扇关闭
        delay(1000); // 等待1秒
        analogWrite(FAN_PIN, 0); // 停止风扇
    }
}
